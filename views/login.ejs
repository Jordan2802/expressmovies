<!DOCTYPE html>
	<html lang="fr">
	<head>
		<meta charset="UTF-8">
		<title>Express Movies</title>
		<link rel="stylesheet" href="../public/style.css" />
        <script src="https://unpkg.com/axios@0.15.3/dist/axios.min.js"></script>
	</head>
	<body>
		<% include ./partials/header %>

		<div class="central">
			<h1><%= title %></h1>
			<br>
			<div id="login">
				<form>
					<legend>Veuillez saisir vos identifiants</legend>
					<label for="email">email</label>
					<input type="text" name="email" id="email">
					<label for="password">mot de passe</label>
					<input type="password" name="password" id="password">
					<button type="submit">connexion</button>
				</form>
			</div>

			<div id="profile" style="display: none">
				<button id="disconnectBtn">déconnexion</button>
				<button id="display-payload">voir le payload</button>
				<div id="decoded-payload"></div>
			</div>
		</div>

		<footer>
			<% include ./partials/footer %>
		</footer>
		<script>
			var form = document.querySelector('form');
			form.addEventListener("submit", loginUser);	


			var disconnectBtn = document.querySelector('#disconnectBtn');
			disconnectBtn.addEventListener('click', disconnect);
			var connectionLinkArea = document.querySelector('#connectionLink');

			var displayPayloadBtn = document.querySelector('#display-payload');
			displayPayloadBtn.addEventListener('click', displayPayload);

			var loginAera = document.querySelector('#login');
			var profileAera = document.querySelector('#profile');
			handleFormDisplay();


			function loginUser(event) {				
                loginUserWithXHR(event);
			}	
			
			function loginUserWithXHR(event) {		
				event.preventDefault();//empeche de rafraichir la page
                console.log('loginUserWithXHR');		
				// https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/send
				var xhr = new XMLHttpRequest();
				xhr.open("POST", '/login', true);//true pour dire que c'est en asynchrone
				//Send the proper header information along with the request
				xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
				xhr.onreadystatechange = function() {//Call a function when the state changes.
					if(xhr.readyState == XMLHttpRequest.DONE && xhr.status == 200) {
                        let token = xhr.response;
						localStorage.setItem('token', token);
						switchToLoggedinMode();
						form.reset();
					}
				}				
				var email = document.getElementById('email').value;
				var password = document.getElementById('password').value;
				var payLoad = "email=" + email + "&" + "password=" + password; 
				xhr.send(payLoad); 				
			}

			function handleFormDisplay() {
				if(localStorage.getItem('token')) {
					switchToLoggedinMode();
				} else{
					switchToLoggedOutMode();
				}
			}

			function switchToLoggedinMode() {
				loginAera.style.display = 'none';
				profileAera.style.display = 'block';
				connectionLinkArea.innerHTML = '<a href="/login">déconnexion</a>';
			}

			function switchToLoggedOutMode() {
				loginAera.style.display = 'block';
				profileAera.style.display = 'none';
				connectionLinkArea.innerHTML = '<a href="/login">connexion</a>';
			}


			function displayPayload() {
				var payload = parseJwt();
				var decodedPayloadDiv = document.querySelector('#decoded-payload');
				decodedPayloadDiv.innerHTML = `<pre> ${JSON.stringify(payload)}  </pre>`;
			}

			function parseJwt() {
				var tokenFromStorage = localStorage.getItem('token');
				if (tokenFromStorage) {
					var base64Payload = tokenFromStorage.split('.')[1];
					return JSON.parse(window.atob(base64Payload));
				} else {
					return 'not token to parse';
				}
			} 

			function disconnect() {
				switchToLoggedOutMode();
				localStorage.removeItem('token');
			}
		</script>
	</body>
</html>